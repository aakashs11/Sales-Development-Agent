{
  "test_cases": [
    {
      "id": 1,
      "description": "Leads from Mumbai who haven't converted",
      "nl_query": "Get me leads from Mumbai who haven\u2019t converted",
      "expected_code": "df[(df['City'] == 'Mumbai') & (df['Converted'] == 0)]",
      "expected_lead_numbers": [
        659357,
        655287,
        615883
      ],
      "expected_count": 3
    },
    {
      "id": 2,
      "description": "Direct Traffic leads who are not interested",
      "nl_query": "Show me leads from Direct Traffic that are not interested",
      "expected_code": "df[(df['Lead Source'] == 'Direct Traffic') & (df['Lead Stage'] == 'Not Interested')]",
      "expected_lead_numbers": [
        655287,
        625880
      ],
      "expected_count": 2
    },
    {
      "id": 3,
      "description": "Leads from Olark Chat who converted",
      "nl_query": "Find all leads from Olark Chat who converted",
      "expected_code": "df[(df['Lead Source'] == 'Olark Chat') & (df['Converted'] == 1)]",
      "expected_lead_numbers": [
        653724,
        646302,
        635995,
        631411,
        624762,
        617610,
        616058
      ],
      "expected_count": 7
    },
    {
      "id": 4,
      "description": "Leads with Do Not Email or Do Not Call = 'Yes'",
      "nl_query": "Which leads have 'Do Not Email' or 'Do Not Call' as Yes?",
      "expected_code": "df[(df['Do Not Email'] == 'Yes') | (df['Do Not Call'] == 'Yes')]",
      "expected_lead_numbers": [
        646302,
        595717
      ],
      "expected_count": 2
    },
    {
      "id": 5,
      "description": "Qualified leads in Mumbai with Lead Score > 80",
      "nl_query": "Get me qualified leads in Mumbai whose lead score is above 80",
      "expected_code": "df[(df['City'] == 'Mumbai') & (df['Lead Stage'] == 'Qualified') & (df['Lead Score'] > 80)]",
      "expected_lead_numbers": [
        637980,
        617845,
        613622,
        605652,
        588124
      ],
      "expected_count": 5
    },
    {
      "id": 6,
      "description": "Leads in age group 21-25",
      "nl_query": "Show me all leads between the age of 21 and 25",
      "expected_code": "df[df['Age'] == '21-25']",
      "expected_lead_numbers": [
        636404,
        617845
      ],
      "expected_count": 2
    },
    {
      "id": 7,
      "description": "Number of leads with API origin",
      "nl_query": "How many leads came from an API origin?",
      "expected_code": "len(df[df['Lead Origin'] == 'API'])",
      "expected_count": 12
    },
    {
      "id": 8,
      "description": "Leads from India with Lead Grade B",
      "nl_query": "Can you get me leads from India who have a lead grade of B?",
      "expected_code": "df[(df['Country'] == 'India') & (df['Lead Grade'] == 'B')]",
      "expected_lead_numbers": [
        654061,
        649941,
        636404,
        617845,
        616761
      ],
      "expected_count": 5
    },
    {
      "id": 9,
      "description": "Closed leads with Lead Score above 300",
      "nl_query": "Get me all closed leads that have a lead score more than 300",
      "expected_code": "df[(df['Lead Stage'] == 'Closed') & (df['Lead Score'] > 300)]",
      "expected_lead_numbers": [
        651812,
        643051,
        615524
      ],
      "expected_count": 3
    },
    {
      "id": 10,
      "description": "Unreachable leads from Organic Search",
      "nl_query": "List all unreachable leads that came from Organic Search",
      "expected_code": "df[(df['Lead Stage'] == 'Unreachable') & (df['Lead Source'] == 'Organic Search')]",
      "expected_lead_numbers": [
        660030
      ],
      "expected_count": 1
    }
  ]
}